import java.util.ArrayList;

class Stack {
    private ArrayList<Integer> stackList;
    private int capacity;

    public Stack(int size) {
        stackList = new ArrayList<>(size);
        capacity = size;
    }
    public void push(int value) {
        if (stackList.size() >= capacity) {
            System.out.println("Stack Overflow! Cannot push " + value);
            return;
        }
        stackList.add(value);
        System.out.println("Pushed: " + value);
    }
    public int pop() {
        if (stackList.size() == 0) {
            System.out.println("Stack Underflow! No element to pop.");
            return -1;
        }
        return stackList.remove(stackList.size() - 1);
    }
    public int peek() {
        if (stackList.size() == 0) {
            System.out.println("Stack is empty! No element to peek.");
            return -1;
        }
        return stackList.get(stackList.size() - 1);
    }
    public void removeSmallestAndPlaceAtTop() {
        
        if (stackList.size() > 0) {

           
            for (int i = 0; i < stackList.size(); i++) {
                for (int j = i + 1; j < stackList.size(); j++) {
                    if (stackList.get(i) > stackList.get(j)) {
                        int temp = stackList.get(i);
                        stackList.set(i, stackList.get(j));
                        stackList.set(j, temp);
                    }
                }
            }

           
            int smallest = stackList.remove(0); 
            stackList.add(0, smallest); 
            System.out.println("Smallest element removed and placed at the top: " + smallest);
        }
    }

    
    public void printStack() {
        System.out.print("Stack: ");
        for (int val : stackList) {
            System.out.print(val + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Stack stack = new Stack(5);

        stack.push(20);
        stack.push(30);
        stack.push(10);
        stack.push(50);
        stack.push(40);

        stack.printStack(); 

        
        stack.removeSmallestAndPlaceAtTop();

        stack.printStack(); 

        System.out.println("Peek: " + stack.peek());
        System.out.println("Popped: " + stack.pop());
        System.out.println("Popped: " + stack.pop());
        stack.printStack(); 
    }
}
